(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{325:function(t,a,s){"use strict";s.r(a);var n=s(14),r=Object(n.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"rabbitmq"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#rabbitmq"}},[t._v("#")]),t._v(" RabbitMQ")]),t._v(" "),a("h2",{attrs:{id:"_1-同步通讯和异步通讯"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-同步通讯和异步通讯"}},[t._v("#")]),t._v(" 1. 同步通讯和异步通讯")]),t._v(" "),a("p",[t._v("微服务间通讯有同步和异步两种方式：")]),t._v(" "),a("p",[t._v("同步通讯：就像打电话，需要实时响应。")]),t._v(" "),a("p",[t._v("异步通讯：就像发邮件，不需要马上回复。")]),t._v(" "),a("p",[a("img",{attrs:{src:"/%E5%9B%BE1.1.png",alt:""}})]),t._v(" "),a("p",[t._v("两种方式各有优劣，打电话可以立即得到响应，但是你却不能跟多个人同时通话。发送邮件可以同时与多个人收发邮件，但是往往响应会有延迟。")]),t._v(" "),a("h3",{attrs:{id:"_1-1-同步通讯"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-同步通讯"}},[t._v("#")]),t._v(" 1.1 同步通讯")]),t._v(" "),a("p",[t._v("我们之前学习的Feign调用就属于同步方式，虽然调用可以实时得到结果，但存在下面的问题：")]),t._v(" "),a("p",[a("img",{attrs:{src:"/%E5%9B%BE1.2.png",alt:""}})]),t._v(" "),a("p",[a("strong",[t._v("总结：")])]),t._v(" "),a("p",[a("strong",[t._v("同步调用的优点：")])]),t._v(" "),a("ul",[a("li",[t._v("时效性较强，可以立即得到结果")])]),t._v(" "),a("p",[a("strong",[t._v("同步调用的问题：")])]),t._v(" "),a("ul",[a("li",[t._v("耦合度高")]),t._v(" "),a("li",[t._v("性能和吞吐能力下降")]),t._v(" "),a("li",[t._v("有额外的资源消耗")]),t._v(" "),a("li",[t._v("有级联失败问题")])]),t._v(" "),a("p",[a("img",{attrs:{src:"/%E5%9B%BE1.3.png",alt:""}})]),t._v(" "),a("h3",{attrs:{id:"_1-2-异步通讯"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-异步通讯"}},[t._v("#")]),t._v(" 1.2 异步通讯")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("异步调用则可以避免上述问题：")])])]),t._v(" "),a("blockquote",[a("p",[t._v("我们以购买商品为例，用户支付后需要调用订单服务完成订单状态修改，调用物流服务，从仓库分配响应的库存并准备发货。")]),t._v(" "),a("p",[t._v("在事件模式中，支付服务是事件发布者（publisher），在支付完成后只需要发布一个支付成功的事件（event），事件中带上订单id。")]),t._v(" "),a("p",[t._v("订单服务和物流服务是事件订阅者（Consumer），订阅支付成功的事件，监听到事件后完成自己业务即可。")]),t._v(" "),a("p",[t._v("为了解除事件发布者与订阅者之间的耦合，两者并不是直接通信，而是有一个中间人（Broker）。发布者发布事件到Broker，不关心谁来订阅事件。订阅者从Broker订阅事件，不关心谁发来的消息。")]),t._v(" "),a("p",[a("img",{attrs:{src:"/%E5%9B%BE1.4.png",alt:""}})])]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("异步调用常见实现就是事件驱动模式")])])]),t._v(" "),a("p",[a("img",{attrs:{src:"/%E5%9B%BE1.5.png",alt:""}})]),t._v(" "),a("p",[a("strong",[t._v("Broker 是一个像数据总线一样的东西，所有的服务要接收数据和发送数据都发到这个总线上，这个总线就像协议一样，让服务间的通讯变得标准和可控。")])]),t._v(" "),a("p",[a("strong",[t._v("好处：")])]),t._v(" "),a("ul",[a("li",[t._v("吞吐量提升：无需等待订阅者处理完成，响应更快速")]),t._v(" "),a("li",[t._v("故障隔离：服务没有直接调用，不存在级联失败问题\n"),a("ul",[a("li",[a("img",{attrs:{src:"/%E5%9B%BE1.8.png",alt:""}})])])]),t._v(" "),a("li",[t._v("调用间没有阻塞，不会造成无效的资源占用\n"),a("ul",[a("li",[a("img",{attrs:{src:"/%E5%9B%BE1.7.png",alt:""}})])])]),t._v(" "),a("li",[t._v("耦合度极低，每个服务都可以灵活插拔，可替换\n"),a("ul",[a("li",[a("img",{attrs:{src:"/%E5%9B%BE1.6.png",alt:""}})])])]),t._v(" "),a("li",[t._v("流量削峰：不管发布事件的流量波动多大，都由Broker接收，订阅者可以按照自己的速度去处理事件\n"),a("ul",[a("li",[a("img",{attrs:{src:"/%E5%9B%BE1.9.png",alt:""}})])])])]),t._v(" "),a("p",[a("strong",[t._v("缺点：")])]),t._v(" "),a("ul",[a("li",[t._v("架构复杂了，业务没有明显的流程线，不好管理")]),t._v(" "),a("li",[t._v("需要依赖于Broker的可靠、安全、性能")])]),t._v(" "),a("p",[t._v("好在现在开源软件或云平台上 Broker 的软件是非常成熟的，比较常见的一种就是我们今天要学习的MQ技术。")]),t._v(" "),a("h2",{attrs:{id:"_2-消息中间件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-消息中间件"}},[t._v("#")]),t._v(" 2. 消息中间件")]),t._v(" "),a("h3",{attrs:{id:"_2-1-什么是消息中间件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-什么是消息中间件"}},[t._v("#")]),t._v(" 2.1 什么是消息中间件")]),t._v(" "),a("p",[t._v("​        MQ全称为Message Queue，消息队列是应用程序和应用程序之间的通信方法，字面来看就是存放消息的队列。也就是事件驱动架构中的Broker。")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("为什么使用MQ ?")])])]),t._v(" "),a("p",[t._v("​        在项目中，可将一些无需即时返回且耗时的操作提取出来，进行异步处理，而这种异步处理的方式\n大大的节省了服务器的请求响应时间，从而提高了系统的吞吐量。")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("开发中消息队列通常有如下应用场景：")])])]),t._v(" "),a("ol",[a("li",[a("strong",[t._v("任务异步处理")])])]),t._v(" "),a("p",[t._v("​         将不需要同步处理的并且耗时长的操作由消息队列通知消息接收方进行异步处理。提高了应用程序\n的响应时间。")]),t._v(" "),a("ol",{attrs:{start:"2"}},[a("li",[a("strong",[t._v("应用程序解耦合")])])]),t._v(" "),a("p",[t._v("MQ相当于一个中介，生产方通过MQ与消费方交互，它将应用程序进行解耦合。")]),t._v(" "),a("ol",{attrs:{start:"3"}},[a("li",[a("strong",[t._v("削峰填谷")])])]),t._v(" "),a("p",[t._v("​         如订单系统，在下单的时候就会往数据库写数据。但是数据库只能支撑每秒1000左右的并发写入，\n并发量再高就容易宕机。低峰期的时候并发也就100多个，但是在高峰期时候，并发量会突然激增\n到5000以上，这个时候数据库肯定卡死了。")]),t._v(" "),a("p",[a("img",{attrs:{src:"/%E5%9B%BE2.1.png",alt:""}})]),t._v(" "),a("p",[t._v("消息被MQ保存起来了，然后系统就可以按照自己的消费能力来消费，比如每秒1000个数据，这样\n慢慢写入数据库，这样就不会卡死数据库了。")]),t._v(" "),a("p",[a("img",{attrs:{src:"/%E5%9B%BE2.2.png",alt:""}})]),t._v(" "),a("p",[t._v("但是使用了MQ之后，限制消费消息的速度为1000，但是这样一来，高峰期产生的数据势必会被积\n压在MQ中，高峰就被“削”掉了。但是因为消息积压，在高峰期过后的一段时间内，消费消息的速\n度还是会维持在1000QPS，直到消费完积压的消息,这就叫做“填谷”")]),t._v(" "),a("p",[a("img",{attrs:{src:"/%E5%9B%BE2.3.png",alt:""}})]),t._v(" "),a("h3",{attrs:{id:"_2-2-amqp-和-jms"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-amqp-和-jms"}},[t._v("#")]),t._v(" 2.2 AMQP 和 JMS")]),t._v(" "),a("p",[t._v("MQ是消息通信的模型；实现MQ的大致有两种主流方式：AMQP、JMS。")]),t._v(" "),a("ul",[a("li",[a("p",[a("strong",[t._v("AMQP")])]),t._v(" "),a("ul",[a("li",[t._v("AMQP是一种协议，更准确的说是一种binary wire-level protocol（链接协议）。这是其和JMS的本质差别，AMQP不从API层进行限定，而是直接定义网络交换的数据格式。")])])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("JMS")])]),t._v(" "),a("ul",[a("li",[t._v("JMS即Java消息服务（JavaMessage Service）应用程序接口，是一个Java平台中关于面向消息中间件（MOM）的API，用于在两个应用程序之间，或分布式系统中发送消息，进行异步通信。")])])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("AMQP 与 JMS 区别的区别")])]),t._v(" "),a("ul",[a("li",[t._v("JMS是定义了统一的接口，来对消息操作进行统一；AMQP是通过规定协议来统一数据交互的格式")]),t._v(" "),a("li",[t._v("JMS限定了必须使用Java语言；AMQP只是协议，不规定实现方式，因此是跨语言的。")]),t._v(" "),a("li",[t._v("JMS规定了两种消息模式；而AMQP的消息模式更加丰富")])])])]),t._v(" "),a("h3",{attrs:{id:"_2-3-消息队列产品"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-消息队列产品"}},[t._v("#")]),t._v(" 2.3 消息队列产品")]),t._v(" "),a("p",[t._v("市场上常见的消息队列有如下：")]),t._v(" "),a("ul",[a("li",[t._v("ActiveMQ：基于JMS,誉为消息中间件领域的“瑞士军刀”。")]),t._v(" "),a("li",[t._v("ZeroMQ：基于C语言开发。")]),t._v(" "),a("li",[t._v("RabbitMQ：基于AMQP协议，erlang语言开发，稳定性好; 吞吐量和性能完美平衡。")]),t._v(" "),a("li",[t._v("RocketMQ：基于JMS，阿里巴巴产品，高吞吐量。")]),t._v(" "),a("li",[t._v("Kafka：类似MQ的产品；分布式消息系统，高吞吐量。")])]),t._v(" "),a("p",[a("img",{attrs:{src:"/%E5%9B%BE2.4.png",alt:""}})]),t._v(" "),a("table",[a("thead",[a("tr",[a("th"),t._v(" "),a("th",[a("strong",[t._v("RabbitMQ")])]),t._v(" "),a("th",[a("strong",[t._v("ActiveMQ")])]),t._v(" "),a("th",[a("strong",[t._v("RocketMQ")])]),t._v(" "),a("th",[a("strong",[t._v("Kafka")])])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("公司/社区")]),t._v(" "),a("td",[t._v("Rabbit")]),t._v(" "),a("td",[t._v("Apache")]),t._v(" "),a("td",[t._v("阿里")]),t._v(" "),a("td",[t._v("Apache")])]),t._v(" "),a("tr",[a("td",[t._v("开发语言")]),t._v(" "),a("td",[t._v("Erlang")]),t._v(" "),a("td",[t._v("Java")]),t._v(" "),a("td",[t._v("Java")]),t._v(" "),a("td",[t._v("Scala&Java")])]),t._v(" "),a("tr",[a("td",[t._v("协议支持")]),t._v(" "),a("td",[t._v("AMQP，XMPP，SMTP，STOMP")]),t._v(" "),a("td",[t._v("OpenWire,STOMP，REST,XMPP,AMQP")]),t._v(" "),a("td",[t._v("自定义协议")]),t._v(" "),a("td",[t._v("自定义协议")])]),t._v(" "),a("tr",[a("td",[t._v("可用性")]),t._v(" "),a("td",[t._v("高")]),t._v(" "),a("td",[t._v("一般")]),t._v(" "),a("td",[t._v("高")]),t._v(" "),a("td",[t._v("高")])]),t._v(" "),a("tr",[a("td",[t._v("单机吞吐量")]),t._v(" "),a("td",[t._v("一般")]),t._v(" "),a("td",[t._v("差")]),t._v(" "),a("td",[t._v("高")]),t._v(" "),a("td",[t._v("非常高")])]),t._v(" "),a("tr",[a("td",[t._v("消息延迟")]),t._v(" "),a("td",[t._v("微秒级")]),t._v(" "),a("td",[t._v("毫秒级")]),t._v(" "),a("td",[t._v("毫秒级")]),t._v(" "),a("td",[t._v("毫秒以内")])]),t._v(" "),a("tr",[a("td",[t._v("消息可靠性")]),t._v(" "),a("td",[t._v("高")]),t._v(" "),a("td",[t._v("一般")]),t._v(" "),a("td",[t._v("高")]),t._v(" "),a("td",[t._v("一般")])])])]),t._v(" "),a("p",[t._v("追求可用性：Kafka、 RocketMQ 、RabbitMQ")]),t._v(" "),a("p",[t._v("追求可靠性：RabbitMQ、RocketMQ")]),t._v(" "),a("p",[t._v("追求吞吐能力：RocketMQ、Kafka")]),t._v(" "),a("p",[t._v("追求消息低延迟：RabbitMQ、Kafka")]),t._v(" "),a("h2",{attrs:{id:"_3-rabbitmq"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-rabbitmq"}},[t._v("#")]),t._v(" 3. RabbitMQ")]),t._v(" "),a("h3",{attrs:{id:"_3-1-rabbitmq-简介"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-rabbitmq-简介"}},[t._v("#")]),t._v(" 3.1 RabbitMQ 简介")]),t._v(" "),a("p",[t._v("​\t"),a("code",[t._v("RabbitMQ")]),t._v("是由erlang语言开发，基于"),a("code",[t._v("AMQP")]),t._v("（Advanced Message Queue 高级消息队列协议）协议实现的消息队列，它是一种应用程序之间的通信方法，消息队列在分布式系统开发中应用非常广泛。RabbitMQ官方地址：http://www.rabbitmq.com/\n​\tRabbitMQ提供了7种模式："),a("code",[t._v("简单模式")]),t._v("，"),a("code",[t._v("work模式")]),t._v("，"),a("code",[t._v("Publish/Subscribe发布与订阅模式")]),t._v("，"),a("code",[t._v("Routing路由模式")]),t._v("，"),a("code",[t._v("Topics主题模式")]),t._v("，"),a("code",[t._v("RPC远程调用模式")]),t._v("（远程调用,企业很少使用，不作介绍），Publisher Confirms模式(使用较少，不作介绍)，我们后面主要学习前5中模式。官网对应模式介绍：https://www.rabbitmq.com/getstarted.html")]),t._v(" "),a("p",[a("img",{attrs:{src:"/%E5%9B%BE3.1.png",alt:""}})]),t._v(" "),a("h3",{attrs:{id:"_3-2-rabbitmq-安装及配置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-rabbitmq-安装及配置"}},[t._v("#")]),t._v(" 3.2 RabbitMQ 安装及配置")]),t._v(" "),a("h4",{attrs:{id:"_3-2-1-windosw版安装"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-1-windosw版安装"}},[t._v("#")]),t._v(" 3.2.1 Windosw版安装")]),t._v(" "),a("p",[a("strong",[t._v("windows10环境下的RabbitMQ安装步骤")])]),t._v(" "),a("h5",{attrs:{id:"_3-2-1-1-先安装erlang"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-1-1-先安装erlang"}},[t._v("#")]),t._v(" 3.2.1.1 先安装erlang")]),t._v(" "),a("ol",[a("li",[a("strong",[t._v("下载并安装erlang")])])]),t._v(" "),a("blockquote",[a("p",[t._v("第一步：下载并安装erlang\n原因：RabbitMQ服务端代码是使用并发式语言Erlang编写的，安装Rabbit MQ的前提是安装Erlang。\n下载地址：http://www.erlang.org/downloads")])]),t._v(" "),a("p",[a("img",{attrs:{src:"/%E5%9B%BE3.2.png",alt:""}})]),t._v(" "),a("ol",{attrs:{start:"2"}},[a("li",[a("strong",[t._v("下载完：otp_win64_23.3.4.15.exe 是这样的一个exe程序，双击，点next就可以。")])])]),t._v(" "),a("p",[a("img",{attrs:{src:"/%E5%9B%BE3.3.png",alt:""}})]),t._v(" "),a("p",[a("strong",[t._v("选择一个自己想保存的地方，然后next、finish就可以。")])]),t._v(" "),a("p",[a("img",{attrs:{src:"/%E5%9B%BE3.4.png",alt:""}})]),t._v(" "),a("ol",{attrs:{start:"3"}},[a("li",[t._v("安装完事儿后要记得配置一下系统的环境变量。\n此电脑–>鼠标右键“属性”–>高级系统设置–>环境变量–>“新建”系统环境变量")])]),t._v(" "),a("p",[a("img",{attrs:{src:"/%E5%9B%BE3.5.png",alt:""}})]),t._v(" "),a("ol",{attrs:{start:"4"}},[a("li",[t._v("变量名：ERLANG_HOME，变量值就是刚才erlang的安装地址，点击确定。然后双击系统变量path")])]),t._v(" "),a("p",[a("img",{attrs:{src:"/%E5%9B%BE3.6.png",alt:""}})]),t._v(" "),a("ol",{attrs:{start:"5"}},[a("li",[t._v("点击“新建”，将%ERLANG_HOME%\\bin加入到path中。")])]),t._v(" "),a("p",[a("img",{attrs:{src:"/%E5%9B%BE3.7.png",alt:""}})]),t._v(" "),a("ol",{attrs:{start:"6"}},[a("li",[t._v("最后windows键+R键，输入cmd，再输入erl，看到版本号就说明erlang安装成功了。")])]),t._v(" "),a("p",[a("img",{attrs:{src:"/%E5%9B%BE3.8.png",alt:""}})]),t._v(" "),a("h5",{attrs:{id:"_3-2-1-2-安装rabbitmq"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-1-2-安装rabbitmq"}},[t._v("#")]),t._v(" 3.2.1.2 安装rabbitmq")]),t._v(" "),a("ol",[a("li",[t._v("下载并安装RabbitMQ，下载地址：http://www.rabbitmq.com/download.html")])]),t._v(" "),a("p",[a("img",{attrs:{src:"/%E5%9B%BE3.9.png",alt:""}})]),t._v(" "),a("ol",{attrs:{start:"2"}},[a("li",[a("p",[t._v("双击下载后的.exe文件，安装过程与erlang的安装过程相同。RabbitMQ安装好后接下来安装RabbitMQ-Plugins。打开命令行cd，输入RabbitMQ的sbin目录。")]),t._v(" "),a("p",[t._v("我的目录是：D:\\Program Files\\RabbitMQ Server\\rabbitmq_server-3.7.3\\sbin\n然后在后面输入rabbitmq-plugins enable rabbitmq_management命令进行安装")])])]),t._v(" "),a("p",[a("img",{attrs:{src:"/%E5%9B%BE3.10.png",alt:""}})]),t._v(" "),a("ol",{attrs:{start:"3"}},[a("li",[a("strong",[t._v("打开命令行命令行,进入RabbitMQ的安装目录: sbin,输入 rabbitmqctl status , 如果出现以下的图，说明安装是成功的，并且说明现在RabbitMQ Server已经启动了,运行正常。")])])]),t._v(" "),a("p",[a("img",{attrs:{src:"/%E5%9B%BE3.11.png",alt:""}})]),t._v(" "),a("ol",{attrs:{start:"4"}},[a("li",[a("strong",[t._v("RabbitMQ在windows下的安装打开sbin目录，双击rabbitmq-server.bat")])])]),t._v(" "),a("p",[a("img",{attrs:{src:"/%E5%9B%BE3.12.png",alt:""}})]),t._v(" "),a("p",[t._v("等几秒钟看到这个界面后，访问http://localhost:15672")]),t._v(" "),a("ol",{attrs:{start:"5"}},[a("li",[a("strong",[t._v("也可以在服务管理台进行开启和关闭rabbitmq的服务")])])]),t._v(" "),a("p",[a("img",{attrs:{src:"/%E5%9B%BE3.13.png",alt:""}})]),t._v(" "),a("h4",{attrs:{id:"_3-2-2-linux-版安装"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-2-linux-版安装"}},[t._v("#")]),t._v(" 3.2.2 Linux 版安装")]),t._v(" "),a("p",[t._v("​\t RabbitMQ服务器是采用并发式语言Erlang编写的，安装Rabbit MQ的前提是安装Erlang，并设置环境变量ERLANG_HOME后，RabbitMQ才能正常启动。Erlang与RabbitMQ的对应关系可参考官方网站https://www.rabbitmq.com/which-erlang.html。\n​\tErlang的下载地址是:http://erlang.org/download/。 注意centos7不支持erlang24,建议下载otp_src_23.3.tar.gz 或直接在网上下载rpm安装包。RabbitMQ安装文件官网下载速度较慢，可以在华为开源镜像站https://repo.huaweicloud.com/rabbitmq-server/下载。")]),t._v(" "),a("h5",{attrs:{id:"_3-2-2-1-linux系统中直接安装rabbitmq"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-2-1-linux系统中直接安装rabbitmq"}},[t._v("#")]),t._v(" 3.2.2.1  Linux系统中直接安装RabbitMQ")]),t._v(" "),a("ol",[a("li",[t._v("安装依赖环境，如果是centos7mini版，须在线安装依赖环境：")])]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("yum "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" build-essential openssl openssl-devel unixODBC unixODBC-devel "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),t._v("\ngcc gcc-c++ kernel-devel m4 ncurses-devel tk tc xz\n")])])]),a("ol",{attrs:{start:"2"}},[a("li",[t._v("安装Erlang")])]),t._v(" "),a("p",[t._v("​        上传 erlang-18.3-1.el7.centos.x86_64.rpm 、socat-1.7.3.2-5.el7.lux.x86_64.rpm 、rabbitmqserver-3.6.5-1.noarch.rpm。这里的erlang采用的是rpm安装方式，如果采用tar安装方式，需要手工设置环境变量。")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 安装")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("rpm")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-ivh")]),t._v(" erlang-18.3-1.el7.centos.x86_64.rpm\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 安装")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("rpm")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-ivh")]),t._v(" socat-1.7.3.2-5.el7.lux.x86_64.rpm\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 安装")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("rpm")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-ivh")]),t._v(" rabbitmq-server-3.6.5-1.noarch.rpm\n")])])]),a("ol",{attrs:{start:"3"}},[a("li",[t._v("启动停止服务")])]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("service")]),t._v(" rabbitmq-server start "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 启动服务")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("service")]),t._v(" rabbitmq-server stop "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 停止服务")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("service")]),t._v(" rabbitmq-server restart "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 重启服务")]),t._v("\n")])])]),a("ol",{attrs:{start:"4"}},[a("li",[t._v("开启管理界面及配置")])]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 开启管理界面")]),t._v("\nrabbitmq-plugins "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("enable")]),t._v(" rabbitmq_management\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 修改默认配置信息,初学者可以不用修改")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("vim")]),t._v(" /usr/lib/rabbitmq/lib/rabbitmq_server-3.6.5/ebin/rabbit.app\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# 比如修改密码、配置等等，例如：loopback_users 中的 <<"guest">>,只保留guest')]),t._v("\n\n")])])]),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" /usr/share/doc/rabbitmq-server-3.6.5/\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("cp")]),t._v(" rabbitmq.config.example /etc/rabbitmq/rabbitmq.config "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#如果需要配置，可以添加设置")]),t._v("\n配置文件\n")])])]),a("p",[t._v("默认情况下，可以采用默认用户guest(默认密码guest)登录。如果启动服务及开启管理界面后，guest无\n法登录，可采用rabbitmqctl命令添加用户及授权。")]),t._v(" "),a("p",[a("img",{attrs:{src:"/%E5%9B%BE3.14.png",alt:""}})]),t._v(" "),a("h5",{attrs:{id:"_3-2-2-2-采用docker安装rabbitmq"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-2-2-采用docker安装rabbitmq"}},[t._v("#")]),t._v(" 3.2.2.2  采用docker安装RabbitMQ")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker")]),t._v(" run "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-it")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--rm")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--name")]),t._v(" rabbitmq "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-p")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5672")]),t._v(":5672 "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-p")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("15672")]),t._v(":15672 rabbitmq:3.9-\nmanagement\n")])])]),a("h3",{attrs:{id:"_3-3-rabbitmq管控台"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-rabbitmq管控台"}},[t._v("#")]),t._v(" 3.3 RabbitMQ管控台")]),t._v(" "),a("p",[t._v("MQ的基本结构：")]),t._v(" "),a("p",[a("img",{attrs:{src:"/%E5%9B%BE4.1.png",alt:""}})]),t._v(" "),a("p",[a("strong",[t._v("RabbitMQ中的一些角色：")])]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("publisher：生产者")])]),t._v(" "),a("li",[a("strong",[t._v("consumer：消费者")])]),t._v(" "),a("li",[a("strong",[t._v("exchange个：交换机，负责消息路由")])]),t._v(" "),a("li",[a("strong",[t._v("queue：队列，存储消息")])]),t._v(" "),a("li",[a("strong",[t._v("virtualHost：虚拟主机，隔离不同租户的exchange、queue、消息的隔离")])])]),t._v(" "),a("h4",{attrs:{id:"_3-3-1-管控台总览介绍"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-1-管控台总览介绍"}},[t._v("#")]),t._v(" 3.3.1 管控台总览介绍")]),t._v(" "),a("p",[t._v("管理员可以通过15672端口登录rabbitmq的web管控台。RabbitMQ管控台如下图：")]),t._v(" "),a("p",[a("img",{attrs:{src:"/%E5%9B%BE4.2.png",alt:""}})]),t._v(" "),a("p",[t._v("​\t点击"),a("code",[t._v("RabbitMQ")]),t._v("的管控台中概览的Nodes,它表示当前节点的情况状态。其中File descriptors是文件描述，Socket descriptors是通信情况，Erlang processes代表了Erlang的进程数，Memory代表了整个服务的内存使用情况，Disk space代表了磁盘的使用情况，Rates mode，Info代表了存储状态。\n​\t"),a("code",[t._v("Paths")]),t._v("对应了RabbitMQ的一些配置路径，其中Config file为配置文件路径，Database directory代表了数据的存储路径，Log file代表了日志文件的存储路径。")]),t._v(" "),a("p",[a("img",{attrs:{src:"/%E5%9B%BE4.3.png",alt:""}})]),t._v(" "),a("p",[t._v("​\tRabbitMQ的管控台中概览的Ports and contexts，是RabbitMQ提供的端口号都代表了什么含义，"),a("code",[t._v("amqp")]),t._v("默认是"),a("code",[t._v("5672")]),t._v("，clustering集群默认是"),a("code",[t._v("25672")]),t._v("。Web contexts代表了RabbitMQ管控台的端口号是"),a("code",[t._v("15672")])]),t._v(" "),a("p",[a("img",{attrs:{src:"/%E5%9B%BE4.4.png",alt:""}})]),t._v(" "),a("h4",{attrs:{id:"_3-3-2-管控台管理员介绍"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-2-管控台管理员介绍"}},[t._v("#")]),t._v(" 3.3.2 管控台管理员介绍")]),t._v(" "),a("p",[t._v("​\t我们开发应用程序时，一般建议对于每一个应用程序创建一个独立的数据库进行隔离。同样，在rabbimq中，我们采用virtual host(虚拟主机)隔离不同的应用程序。在RabbitMQ中可以配置虚拟主机Virtual Host，每个Virtual Hosts相当于一个相对独立的RabbitMQ服务器，每个VirtualHost之间是相互隔离的。exchange、queue、message不能互通。 相当于Mysql的db。规范的VirtualHost名称一般以/开头。下面我们讲解人配置虚拟主机及用户。\n​\t点击 Admin → Users，我们可以看到rabbitmq新增用户界面。")]),t._v(" "),a("p",[a("img",{attrs:{src:"/%E5%9B%BE4.5.png",alt:""}})]),t._v(" "),a("p",[t._v("我们可以为用户选择以下不同的角色。")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("超级管理员(administrator)")])])]),t._v(" "),a("p",[t._v("可登陆管理控制台，可查看所有的信息，并且可以对用户，策略(policy)进行操作。")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("监控者(monitoring)")])])]),t._v(" "),a("p",[t._v("可登陆管理控制台，同时可以查看rabbitmq节点的相关信息(进程数，内存使用情况，磁盘使用情况等)")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("策略制定者(policymaker)")])])]),t._v(" "),a("p",[t._v("可登陆管理控制台, 同时可以对policy进行管理。但无法查看节点的相关信息。")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("普通管理者(management)")])])]),t._v(" "),a("p",[t._v("仅可登陆管理控制台，无法看到节点信息，也无法对策略进行管理。")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("其他")])])]),t._v(" "),a("p",[t._v("​        无法登陆管理控制台，通常就是普通的生产者和消费者。点击Admin → Virtual Hosts,我们可以看到虚拟主机管理界面。")]),t._v(" "),a("p",[a("img",{attrs:{src:"/%E5%9B%BE4.6.png",alt:""}})]),t._v(" "),a("p",[t._v("接下来我们可以为虚拟主机选择对应的用户。")]),t._v(" "),a("p",[a("img",{attrs:{src:"/%E5%9B%BE4.7.png",alt:""}})]),t._v(" "),a("h4",{attrs:{id:"_3-3-3-用户角色"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-3-用户角色"}},[t._v("#")]),t._v(" 3.3.3 用户角色")]),t._v(" "),a("p",[t._v("​        RabbitMQ安装后，可以直接访问http://localhost:15672/，其自带的用户名：guest，密码：guesst，如果需要自定义创建用户，可以登录页面后操作。")]),t._v(" "),a("p",[a("img",{attrs:{src:"/%E5%9B%BE5.5.png",alt:""}})]),t._v(" "),a("p",[a("img",{attrs:{src:"/%E5%9B%BE5.1.png",alt:""}})]),t._v(" "),a("p",[a("strong",[t._v("角色说明：")])]),t._v(" "),a("ol",[a("li",[a("p",[a("strong",[t._v("超级管理员(administrator)")])]),t._v(" "),a("p",[t._v("可登陆管理控制台，可查看所有的信息，并且可以对用户，策略(policy)进行操作。")])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("监控者(monitoring)")])]),t._v(" "),a("p",[t._v("可登陆管理控制台，同时可以查看rabbitmq节点的相关信息(进程数，内存使用情况，磁盘使用情况等)")])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("策略制定者(policymaker)")])]),t._v(" "),a("p",[t._v("可登陆管理控制台,同时可以对policy进行管理。但无法查看节点的相关信息(上图红框标识的部分")])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("普通管理者(management)")])]),t._v(" "),a("p",[t._v("仅可登陆管理控制台，无法看到节点信息，也无法对策略进行管理。")])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("其他")])]),t._v(" "),a("p",[t._v("无法登陆管理控制台，通常就是普通的生产者和消费者。")])])]),t._v(" "),a("h4",{attrs:{id:"_3-3-4-virtual-hosts配置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-4-virtual-hosts配置"}},[t._v("#")]),t._v(" 3.3.4 Virtual Hosts配置")]),t._v(" "),a("ul",[a("li",[a("p",[a("strong",[t._v("创建一个虚拟主机Virtual Hosts")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[t._v("  像mysql拥有数据库的概念并且可以指定用户对库和表等操作的权限。RabbitMQ也有类似的权限管理，RabbitMQ中可以虚拟消息服务器Virtual Host，每个Virtual Hosts相当于一个相对独立的RabbitMQ服务器，每个VirtualHost之间是相互隔离的。exchange、queue、message不能互通。相当于mysql的db。Virtual Name一般以/开头。\n")])])])])]),t._v(" "),a("p",[a("img",{attrs:{src:"/%E5%9B%BE5.2.png",alt:""}})]),t._v(" "),a("ul",[a("li",[t._v("设置Virtual Hosts权限")])]),t._v(" "),a("p",[a("img",{attrs:{src:"/%E5%9B%BE5.6.png",alt:""}})]),t._v(" "),a("p",[a("img",{attrs:{src:"/%E5%9B%BE5.3.png",alt:""}})]),t._v(" "),a("h3",{attrs:{id:"_3-4-rabbitmq的使用模式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-4-rabbitmq的使用模式"}},[t._v("#")]),t._v(" 3.4 RabbitMQ的使用模式")]),t._v(" "),a("h4",{attrs:{id:"_3-4-1-rabbitmq入门"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-4-1-rabbitmq入门"}},[t._v("#")]),t._v(" 3.4.1 RabbitMQ入门")]),t._v(" "),a("p",[t._v("接下来，我们开发第一个RabbitMQ程序。我们通过这个程序学习RabbitMQ的模式。\nRabbitMQ的入门程序涉及到如下几个对象及角色：")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("ConnectionFactory")]),t._v("对象: 类似于数据库连接中的DataSource对象, ConnectionFactory在整个应用程序中为全局唯一的，我们可以把它在静态块中初始化。")]),t._v(" "),a("li",[a("code",[t._v("Connection")]),t._v("对象：一个网络连接，比如TCP/IP套接字连接, 类似于JDBC中的Connection对象。")]),t._v(" "),a("li",[a("code",[t._v("Channel")]),t._v("对象：信道对象。一个连接对象可以创建多个Channel对象，我们可以声明Channel独占一个连接或者多个信道共享一个连接，信道是RabbitMQ中最核心的一个对象。它的作用有：声明创建队列、声明创建交换机、发布信息、消费信息、确认信息。我们可以把它与MyBatis框架中的SqlSession对象或JDBC中的Statement对象作类比，Statement用来发送SQL语句到数据，Channel可以发送信息到RabbitMQ服务器。")]),t._v(" "),a("li",[a("code",[t._v("Queues")]),t._v("对象：消息队列对象, Channel发送的信息最终会进入到消息队列中存储，消息队列可以声明为内存存储或永久存储。")]),t._v(" "),a("li",[a("code",[t._v("Producer")]),t._v("生产者角色: 一个向RabbitMQ的Broker发布消息的客户端应用程序。")]),t._v(" "),a("li",[a("code",[t._v("Consumer")]),t._v("消费者角色: 一个监听RabbitMQ的消息队列请求消息的应用程序。如果我们利用RabbitMQ解耦合，生产者及消费者往往对应于不同的微服务模块。这里我们为了简单，把它们写在同一个项目中。")]),t._v(" "),a("li",[a("code",[t._v("Admin")]),t._v(": 可以创建用户，也可以创建虚拟主机Virtual Hosts，创建的用户需要管理虚拟主机。")])]),t._v(" "),a("h4",{attrs:{id:"_3-4-2-搭建示例工程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-4-2-搭建示例工程"}},[t._v("#")]),t._v(" 3.4.2 搭建示例工程")]),t._v(" "),a("ol",[a("li",[t._v("创建工程")])]),t._v(" "),a("p",[a("img",{attrs:{src:"/%E5%9B%BE6.1.png",alt:""}})]),t._v(" "),a("p",[t._v("项目结构")]),t._v(" "),a("p",[a("img",{attrs:{src:"/%E5%9B%BE6.2.png",alt:""}})]),t._v(" "),a("ol",{attrs:{start:"2"}},[a("li",[t._v("添加依赖")])]),t._v(" "),a("div",{staticClass:"language-xml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-xml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("dependency")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("groupId")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("com.rabbitmq"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("groupId")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("artifactId")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("amqp-client"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("artifactId")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("version")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("5.12.0"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("version")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("dependency")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("dependency")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("groupId")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("ch.qos.logback"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("groupId")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("artifactId")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("logback-classic"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("artifactId")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("version")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("1.2.9"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("version")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("dependency")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("dependency")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("groupId")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("org.projectlombok"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("groupId")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("artifactId")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("lombok"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("artifactId")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("version")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("1.18.22"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("version")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("dependency")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),a("ol",{attrs:{start:"3"}},[a("li",[t._v("书写RabbitMQ的工具类RabbitUtil.")])]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("RabbitUtil")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ConnectionFactory")]),t._v(" factory"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("factory "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            factory "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ConnectionFactory")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            factory"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setVirtualHost")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/tpp"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            factory"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setHost")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"127.0.0.1"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            factory"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setPort")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5672")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//链接RabbitMQ的端口号")]),t._v("\n            factory"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setUsername")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"axjy"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            factory"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setPassword")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"123456"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//链接密码：默认是guest")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Connection")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getConn")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Connection")]),t._v(" conn "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            conn "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" factory"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("newConnection")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//创建链接")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("catch")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("IOException")]),t._v(" e"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            e"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("printStackTrace")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("catch")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("TimeoutException")]),t._v(" e"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            e"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("printStackTrace")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" conn"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("closeAll")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Connection")]),t._v(" conn"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Channel")]),t._v(" channel"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("channel "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                channel"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("close")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("catch")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("IOException")]),t._v(" e"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                e"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("printStackTrace")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("catch")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("TimeoutException")]),t._v(" e"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                e"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("printStackTrace")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("conn "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" conn"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("isOpen")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                conn"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("close")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("catch")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("IOException")]),t._v(" e"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                e"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("printStackTrace")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("ol",{attrs:{start:"4"}},[a("li",[t._v("可以手动创建队列")])]),t._v(" "),a("p",[a("img",{attrs:{src:"/%E5%9B%BE6.3.png",alt:""}})]),t._v(" "),a("ol",{attrs:{start:"5"}},[a("li",[t._v("编写生产者测试程序。也可以通过代码创建队列")])]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Slf4j")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Sender")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" args"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throws")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("IOException")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Connection")]),t._v(" conn "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("RabbitUtil")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getConn")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Channel")]),t._v(" channel "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" conn"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("createChannel")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//相当于jdbc的statement，发送信息")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Map")]),t._v(" arguments "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("HashMap")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        arguments"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("put")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"x-max-length-bytes"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        channel"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("queueDelete")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"my_simple_queue"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/** 声明（如果不存在，会创建）\n         * 参数1：队列名称     参数2：是否定义持久化队列      参数3：是否独占本次链接 \n         * 参数4：是否在不适用的时候自动删除队列      参数5：队列其他参数\n         */")]),t._v("\n        channel"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("queueDeclare")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"my_simple_queue"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("arguments"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/** 信息发送到队列里  发信息\n         * 第一个参数：交换机名称，可以写成“”，空字符为内部默认交换机(没有交换机)\n         * 第二个参数：队列的名称    第三个参数：信息的基本属性    第四个参数：信息内容\n         */")]),t._v("       channel"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("basicPublish")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"my_simple_queue"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"fasHi,rabbitaaafasfdasf"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getBytes")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        log"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("info")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"发送成功！"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("RabbitUtil")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("closeAll")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("conn"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("channel"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("ol",{attrs:{start:"6"}},[a("li",[t._v("编写消费者C1测试程序")])]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Slf4j")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("GetMessage")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@SneakyThrows")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" args"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Connection")]),t._v(" conn "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("RabbitUtil")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getConn")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Channel")]),t._v(" channel "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" conn"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("createChannel")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        channel"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("basicConsume")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"my_simple_queue"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("DefaultConsumer")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("channel"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Override")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("handleDelivery")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" consumerTag"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Envelope")]),t._v(" envelope"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("AMQP"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("BasicProperties")]),t._v(" properties"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("byte")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" body"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throws")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("IOException")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                log"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("info")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"监听的信息内容："')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("body"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"路由key为："')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("envelope"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getRoutingKey")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//路由key")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"交换机为："')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("envelope"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getExchange")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//交换机")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"消息id为："')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("envelope"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getDeliveryTag")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//消息id")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"接收到的消息："')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("body"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"utf-8"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//收到的消息")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("ol",{attrs:{start:"7"}},[a("li",[t._v("增加logback记录日志")])]),t._v(" "),a("p",[t._v("注意，消费者作为监听程序要一直处于运行状态，Connection对象不允许关闭。\n上述的入门案例中中其实使用的是如下的简单模式：")]),t._v(" "),a("p",[a("img",{attrs:{src:"/%E5%9B%BE6.4.png",alt:""}})]),t._v(" "),a("p",[t._v("在上图的模型中，有以下概念：\nP：生产者，也就是要发送消息的程序\nC：消费者：消息的接受者，会一直等待消息到来。\nqueue：消息队列，图中红色部分。类似一个邮箱，可以缓存消息；生产者向其中投递消息，消费者从其中取出消息。以上就是RabbitMQ的第一种使用模式：简单收发模式（官网又称HelloWorld模式)。它有如下两个特点：\n特点：")]),t._v(" "),a("ol",[a("li",[a("p",[a("strong",[t._v("无需自定义exchange(实际上采用的是名称为空字符串的默认交换机);")])])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("一个生产者，一个消费者。消费者能接受到队列中的所有信息。")])])])])])}),[],!1,null,null,null);a.default=r.exports}}]);